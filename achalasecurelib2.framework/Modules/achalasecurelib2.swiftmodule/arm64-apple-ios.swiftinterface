// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios16.6 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name achalasecurelib2
import AVFoundation
import CoreGraphics
import CoreML
import DeveloperToolsSupport
import Foundation
import MLKitFaceDetection
import MLKitVision
import Swift
import SwiftUI
import TensorFlowLite
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import achalasecurelib2
public class AchalaSecureResultModel : Swift.Codable {
  public var score: Swift.String?
  public var bitmapResultData: Foundation.Data?
  public var status: Swift.String?
  public var message: Swift.String?
  public var bitmapResult: UIKit.UIImage? {
    get
  }
  public init(score: Swift.String? = nil, bitmapResultData: Foundation.Data? = nil, status: Swift.String? = nil, message: Swift.String? = nil)
  public func getMessage() -> Swift.String?
  public func setMessage(_ message: Swift.String)
  public func getStatus() -> Swift.String?
  public func setStatus(_ status: Swift.String)
  public func getBitmapResult() -> UIKit.UIImage?
  public func setBitmapResult(_ bitmapResult: UIKit.UIImage)
  public func getScore() -> Swift.String?
  public func setScore(_ score: Swift.String)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
public struct AchalaSecure {
  public static func presentCameraView(isPresented: SwiftUICore.Binding<Swift.Bool>, onFaceDetection: @escaping (Swift.Int) -> Swift.Void, faceResult: @escaping (achalasecurelib2.AchalaSecureResultModel) -> Swift.Void, verifyUser: UIKit.UIImage? = nil, isVerifyUser: Swift.Bool? = nil) -> some SwiftUICore.View
  
}
@_Concurrency.MainActor @preconcurrency public struct CameraView1 : SwiftUI.UIViewControllerRepresentable {
  @SwiftUICore.Binding @_projectedValueProperty($isPresented) @_Concurrency.MainActor @preconcurrency public var isPresented: Swift.Bool {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  @_Concurrency.MainActor @preconcurrency public var $isPresented: SwiftUICore.Binding<Swift.Bool> {
    get
  }
  @_Concurrency.MainActor @preconcurrency public var onFaceDetection: (Swift.Int) -> Swift.Void
  @_Concurrency.MainActor @preconcurrency public var faceResult: (achalasecurelib2.AchalaSecureResultModel) -> Swift.Void
  @_Concurrency.MainActor @preconcurrency public var verifyUser: UIKit.UIImage?
  @_Concurrency.MainActor @preconcurrency public var isVerifyUser: Swift.Bool?
  @_Concurrency.MainActor @preconcurrency public init(isPresented: SwiftUICore.Binding<Swift.Bool>, onFaceDetection: @escaping (Swift.Int) -> Swift.Void, faceResult: @escaping (achalasecurelib2.AchalaSecureResultModel) -> Swift.Void, verifyUser: UIKit.UIImage? = nil, isVerifyUser: Swift.Bool? = nil)
  @_Concurrency.MainActor @preconcurrency public func makeUIViewController(context: achalasecurelib2.CameraView1.Context) -> achalasecurelib2.CameraViewController
  @_Concurrency.MainActor @preconcurrency public func updateUIViewController(_ uiViewController: achalasecurelib2.CameraViewController, context: achalasecurelib2.CameraView1.Context)
  public typealias Body = Swift.Never
  public typealias Coordinator = Swift.Void
  public typealias UIViewControllerType = achalasecurelib2.CameraViewController
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor @preconcurrency public class CameraViewController : UIKit.UIViewController, AVFoundation.AVCaptureVideoDataOutputSampleBufferDelegate {
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor @preconcurrency @objc public func captureOutput(_ output: AVFoundation.AVCaptureOutput, didOutput sampleBuffer: CoreMedia.CMSampleBuffer, from connection: AVFoundation.AVCaptureConnection)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension achalasecurelib2.CameraView1 : Swift.Sendable {}
